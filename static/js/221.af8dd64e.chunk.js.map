{"version":3,"file":"static/js/221.af8dd64e.chunk.js","mappings":"yPAEaA,EAAOC,EAAAA,GAAAA,GAAH,6IASJC,EAAOD,EAAAA,GAAAA,GAAH,yO,SCwBjB,EA9Ba,WACX,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAcjB,OAZAC,EAAAA,EAAAA,YAAU,YAKRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAUM,EACX,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACT,KAGF,SAACJ,EAAD,UACGI,EAAOY,KAAI,SAAAC,GAAK,OACf,SAACf,EAAD,WACE,SAAC,KAAD,CAAMgB,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMf,GAAhD,SACGW,EAAMK,OAASL,EAAMM,QAFfN,EAAME,GADF,KAStB,C,+LC/BKK,EAAW,+BACXC,EAAU,mCAGT,SAAehB,IAAtB,+B,aAAO,O,oBAAA,qGACciB,EAAAA,EAAAA,GAAM,GAAD,OAAIF,EAAJ,qCAAyCC,IAD5D,cACCE,EADD,yBAEEA,EAAKC,KAAKC,SAFZ,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAyBC,GAAzB,wFACcL,EAAAA,EAAAA,GAAM,GAAD,OACnBF,EADmB,iCACcC,EADd,kBAC+BM,EAD/B,+CADnB,cACCJ,EADD,yBAIEA,EAAKC,KAAKC,SAJZ,kEAQA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA4Bb,GAA5B,wFACcO,EAAAA,EAAAA,GAAM,GAAD,OACnBF,EADmB,kBACDL,EADC,oBACaM,EADb,oBADnB,cACCE,EADD,yBAIEA,EAAKC,MAJP,kEAQA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAAuBd,GAAvB,wFACcO,EAAAA,EAAAA,GAAM,GAAD,OACnBF,EADmB,kBACDL,EADC,4BACqBM,EADrB,oBADnB,cACCE,EADD,yBAIEA,EAAKC,KAAKM,MAJZ,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBhB,GAAzB,wFACcO,EAAAA,EAAAA,GAAM,GAAD,OACnBF,EADmB,kBACDL,EADC,4BACqBM,EADrB,2BADnB,cACCE,EADD,yBAIEA,EAAKC,KAAKC,SAJZ,kE","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","services/getApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  padding: 0 0 0 12px;\n  margin: 0;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 4px;\n  font-size: 18px;\n  line-height: 1.32;\n  letter-spacing: 0.03em;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getTrending } from 'services/getApi';\nimport { Item, List } from './Home.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  //   const isFirstRender = useRef(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    //  if (isFirstRender.current) {\n    //    isFirstRender.current = false;\n    //    return;\n    //  }\n    getTrending()\n      .then(result => {\n        setMovies(result);\n      })\n      .catch(error => console.log(error));\n  }, [movies]);\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title || movie.name}\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '02950a717996af9fdef4339cc0050bf4';\n\n//TRENDING\nexport async function getTrending() {\n  const resp = await axios(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n  return resp.data.results;\n}\n\n//SEARCH MOVIES\nexport async function getMovies(value) {\n  const resp = await axios(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}&language=en-US&page=1&include_adult=false`\n  );\n  return resp.data.results;\n}\n\n//DETAILS\nexport async function getMovieById(id) {\n  const resp = await axios(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n}\n\n//CAST\nexport async function getCast(id) {\n  const resp = await axios(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data.cast;\n}\n\n//REVIEWS\nexport async function getReview(id) {\n  const resp = await axios(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return resp.data.results;\n}\n"],"names":["List","styled","Item","useState","movies","setMovies","location","useLocation","useEffect","getTrending","then","result","catch","error","console","log","map","movie","to","id","state","from","title","name","BASE_URL","API_KEY","axios","resp","data","results","getMovies","value","getMovieById","getCast","cast","getReview"],"sourceRoot":""}