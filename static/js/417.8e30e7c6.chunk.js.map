{"version":3,"file":"static/js/417.8e30e7c6.chunk.js","mappings":"uPAEaA,EAAWC,EAAAA,GAAAA,GAAH,wRAaRC,EAAWD,EAAAA,GAAAA,GAAH,0JAQRE,EAAQF,EAAAA,GAAAA,IAAH,8DAKLG,EAAYH,EAAAA,GAAAA,GAAH,yFAMTI,EAAYJ,EAAAA,GAAAA,EAAH,iF,kBCYtB,EAxCa,WACX,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAbAE,EAAAA,EAAAA,YAAU,YAMRC,EAAAA,EAAAA,IAAQH,GACLI,MAAK,SAAAC,GACJN,EAAQM,EACT,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACP,KAGF,0BACE,SAACT,EAAD,UACGO,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACR,UAACrB,EAAD,YACE,SAACC,EAAD,CACEqB,IACEF,EACI,kCAAoCA,EACpCG,EAENC,IAAKL,KAEP,SAACjB,EAAD,UAAYiB,KACZ,SAAChB,EAAD,UAAYkB,MAVCH,EADP,OAiBjB,C,+LC1CKO,EAAW,+BACXC,EAAU,mCAGT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,qGACcC,EAAAA,EAAAA,GAAM,GAAD,OAAIH,EAAJ,qCAAyCC,IAD5D,cACCd,EADD,yBAEEA,EAAKiB,KAAKC,SAFZ,kEAMA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAyBC,GAAzB,wFACcJ,EAAAA,EAAAA,GAAM,GAAD,OACnBH,EADmB,iCACcC,EADd,kBAC+BM,EAD/B,+CADnB,cACCpB,EADD,yBAIEA,EAAKiB,KAAKC,SAJZ,kEAQA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA4Bf,GAA5B,wFACcU,EAAAA,EAAAA,GAAM,GAAD,OACnBH,EADmB,kBACDP,EADC,oBACaQ,EADb,oBADnB,cACCd,EADD,yBAIEA,EAAKiB,MAJP,kEAQA,SAAenB,EAAtB,kC,aAAO,O,oBAAA,WAAuBQ,GAAvB,wFACcU,EAAAA,EAAAA,GAAM,GAAD,OACnBH,EADmB,kBACDP,EADC,4BACqBQ,EADrB,oBADnB,cACCd,EADD,yBAIEA,EAAKiB,KAAKxB,MAJZ,kEAQA,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAAyBhB,GAAzB,wFACcU,EAAAA,EAAAA,GAAM,GAAD,OACnBH,EADmB,kBACDP,EADC,4BACqBQ,EADrB,2BADnB,cACCd,EADD,yBAIEA,EAAKiB,KAAKC,SAJZ,kE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/getApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(148px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n`;\n\nexport const Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n`;\n\nexport const ActorName = styled.h2`\n  font-size: 18px;\n  margin: 0 0 8px 0;\n  text-align: center;\n`;\n\nexport const Character = styled.p`\n  font-size: 14px;\n  margin: 0;\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/getApi';\nimport { CastList, CastItem, Image, ActorName, Character } from './Cast.styled';\nimport placeholder from '../../pictures/placeholder.webp';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  //   const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    //  if (isFirstRender.current) {\n    //    isFirstRender.current = false;\n    //    return;\n    //  }\n\n    getCast(movieId)\n      .then(resp => {\n        setCast(resp);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  return (\n    <div>\n      <CastList>\n        {cast.map(({ id, name, profile_path, character }) => (\n          <CastItem key={id}>\n            <Image\n              src={\n                profile_path\n                  ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                  : placeholder\n              }\n              alt={name}\n            />\n            <ActorName>{name}</ActorName>\n            <Character>{character}</Character>\n          </CastItem>\n        ))}\n      </CastList>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '02950a717996af9fdef4339cc0050bf4';\n\n//TRENDING\nexport async function getTrending() {\n  const resp = await axios(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n  return resp.data.results;\n}\n\n//SEARCH MOVIES\nexport async function getMovies(value) {\n  const resp = await axios(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${value}&language=en-US&page=1&include_adult=false`\n  );\n  return resp.data.results;\n}\n\n//DETAILS\nexport async function getMovieById(id) {\n  const resp = await axios(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data;\n}\n\n//CAST\nexport async function getCast(id) {\n  const resp = await axios(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return resp.data.cast;\n}\n\n//REVIEWS\nexport async function getReview(id) {\n  const resp = await axios(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return resp.data.results;\n}\n"],"names":["CastList","styled","CastItem","Image","ActorName","Character","useState","cast","setCast","movieId","useParams","useEffect","getCast","then","resp","catch","error","console","log","map","id","name","profile_path","character","src","placeholder","alt","BASE_URL","API_KEY","getTrending","axios","data","results","getMovies","value","getMovieById","getReview"],"sourceRoot":""}